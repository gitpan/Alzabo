<%args>
$schema
$table
$unique => 0
@columns
@prefixes
</%args>

<%init>
use Alzabo::Config;

my ($s, $t);
eval
{
    $s = Alzabo::Create::Schema->load_from_file( name => $schema );

    $t = $s->table($table);

    my @cols = ( map { { column => $t->column( $columns[$_] ),
		         defined $prefixes[$_] ? ( prefix => $prefixes[$_] ) : () } }
		 0..$#columns );

    @cols = sort { $ARGS{ $a->{column}->name . '_order' } <=> $ARGS{ $b->{column}->name . '_order' } } @cols;

    $t->make_index( columns => \@cols,
		    unique => $unique );

    $s->save_to_file;
};

$m->comp( '../common/exception', $@ ) if $@;

$m->comp( '../common/redirect', url => 'view_table' . Alzabo::Config::mason_extension() . '?schema=' . $s->name . '&table=' . $t->name );
</%init>

<%flags>
inherit => 'syshandler'
</%flags>
