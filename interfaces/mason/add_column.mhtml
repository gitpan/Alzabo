<%args>
$schema
$table
$column
$type
$sequenced => 0
$null => 0
$primary_key => 0
@attributes => ()
$after => undef
</%args>

<%init>
my ($s, $t);
eval
{
    $s = Alzabo::Create::Schema->load_from_file( name => $schema );

    $t = $s->table($table);

    my %p = ( name => $column,
	      null => $null,
	      type => $type,
	      sequenced => $sequenced,
	      attributes => [ grep {$_} @attributes ],
	    );
    $p{after} = $t->column($after) if defined $after;

    $t->make_column(%p);

    if ($primary_key)
    {
	my $c = $t->column($column);
	$t->add_primary_key($c);
    }

    $s->save_to_file;
};

$m->comp( &Alzabo::Config::mason_url_path . '/common/exception', $@ ) if $@;

$m->comp( &Alzabo::Config::mason_url_path . '/common/redirect', url => 'view_table' . Alzabo::Config::mason_extension() . '?schema=' . $s->name . '&table=' . $t->name );
</%init>

<%flags>
inherit => undef
</%flags>
