
<%args>
$schema
$table
$column
$type
$extended_type => undef
$sequenced => 0
$nullable => 0
$default => undef
$length => undef
$precision => undef
$primary_key => 0
@attributes => ()
$after => undef
</%args>

<%init>
my ($s, $t);
eval
{
    $s = Alzabo::Create::Schema->load_from_file( name => $schema );

    $t = $s->table($table);

    $length = undef if $length eq '';
    $precision = undef if $precision eq '';
    $default = undef if $default eq '';

    my %p = ( name => $column,
	      nullable => $nullable,
	      type => $extended_type || $type,
	      sequenced => $sequenced,
	      default => $default,
	      length => $length,
	      precision => $precision,
	      attributes => [ grep {$_} @attributes ],
	    );
    $p{after} = $t->column($after) if defined $after;

    $t->make_column(%p);

    if ($primary_key)
    {
	my $c = $t->column($column);
	$t->add_primary_key($c);
    }

    $s->save_to_file;
};

$m->comp( '../common/exception', $@ ) if $@;

$m->comp( '../common/redirect',
          url => $m->comp( '../common/make_url',
			   path => 'view_table' . Alzabo::Config::mason_extension(),
			   query => { schema => $s->name,
				      table => $t->name } ) );
</%init>

<%flags>
inherit => 'syshandler'
</%flags>
